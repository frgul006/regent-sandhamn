/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface RegentButton {
        /**
          * Optional parameter. Used to change the type of the internal button if `type` is set to 'BUTTON'
         */
        "buttonType": 'button' | 'submit';
        /**
          * Color of the button
         */
        "color": 'primary' | 'secondary';
        /**
          * Optional parameter. Specifies the URL of the page the link goes to if `type` is set to 'LINK'
         */
        "href": string;
        /**
          * Should this behave like a link or a button? If 'BUTTON' this will render an internal `<button>`-element
         */
        "type": 'button' | 'link';
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLRegentButtonElement extends Components.RegentButton, HTMLStencilElement {
    }
    var HTMLRegentButtonElement: {
        prototype: HTMLRegentButtonElement;
        new (): HTMLRegentButtonElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "regent-button": HTMLRegentButtonElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface RegentButton {
        /**
          * Optional parameter. Used to change the type of the internal button if `type` is set to 'BUTTON'
         */
        "buttonType"?: 'button' | 'submit';
        /**
          * Color of the button
         */
        "color"?: 'primary' | 'secondary';
        /**
          * Optional parameter. Specifies the URL of the page the link goes to if `type` is set to 'LINK'
         */
        "href"?: string;
        /**
          * Should this behave like a link or a button? If 'BUTTON' this will render an internal `<button>`-element
         */
        "type"?: 'button' | 'link';
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "regent-button": RegentButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "regent-button": LocalJSX.RegentButton & JSXBase.HTMLAttributes<HTMLRegentButtonElement>;
        }
    }
}
